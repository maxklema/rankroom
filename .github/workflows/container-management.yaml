name: Proxmox Container Management

on:
  push:
    branches: ["**"]
  create:
  delete:

jobs:
  setup-runner:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.event.created == false
    steps:
      - name: Install Dependencies
        run: |
          sudo apt install -y sshpass jq

      - uses: maxklema/proxmox-launchpad@main
        with:
          github_event_name: ${{ github.event_name }}
          github_repository: ${{ github.event.repository.name }}
          github_repository_owner: ${{ github.repository_owner }}
          github_ref_name: ${{ github.event.ref }}
          proxmox_password: ${{ secrets.PROXMOX_PASSWORD }}
          proxmox_username: ${{ secrets.PROXMOX_USERNAME }}
          container_password: ${{ secrets.CONTAINER_PASSWORD }}
          linux_distribution: debian
          github_pat: ${{ secrets.GH_PAT }}
          create_runner_job: y
  manage-container:
    runs-on: self-hosted
    needs: setup-runner
    if: github.event_name != 'push' || github.event.created == false
    steps:
      - uses: maxklema/proxmox-launchpad@main
        with:
          github_event_name: ${{ github.event_name }}
          github_repository: ${{ github.event.repository.name }}
          github_repository_owner: ${{ github.repository_owner }}
          github_ref_name: ${{ github.event.ref }}
          proxmox_password: ${{ secrets.PROXMOX_PASSWORD }}
          proxmox_username: ${{ secrets.PROXMOX_USERNAME }}
          container_password: ${{ secrets.CONTAINER_PASSWORD }}
          linux_distribution: debian
          github_pat: ${{ secrets.GH_PAT }}
          public_key: ${{ secrets.PUBLIC_KEY }}
          http_port: 32000
          create_runner_job: n
          deploy_on_start: y
          require_env_vars: y
          container_env_vars: '{"API_KEY": "1234"}'
          project_root: /
          install_command: npm i
          build_command: npm build
          start_command: npm start
          runtime_language: nodejs
          require_services: y
          services: '["mongodb"]'
          custom_services: '[["sudo apt-get update", "sudo apt install nginx", "sudo systemctl enable nginx", "sudo systemctl start nginx"]]'
